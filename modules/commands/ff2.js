const axios = require("axios");

module.exports.config = {
  name: "ff",
  version: "2.0.0",
  hasPermission: 0,
  credits: "VLjnh",
  description: "L·∫•y th√¥ng tin ho·∫∑c ki·ªÉm tra t√†i kho·∫£n Free Fire",
  commandCategory: "Ti·ªán √≠ch",
  usages: "ff [ban/info] [UID]",
  cooldowns: 5,
};

module.exports.run = async function ({ api, event, args }) {
  if (args.length < 2) {
    return api.sendMessage("Vui l√≤ng nh·∫≠p ƒë√∫ng c√∫ ph√°p: ff [ban/info] [UID]", event.threadID);
  }

  const commandType = args[0].toLowerCase(); // "ban" ho·∫∑c "info"
  const ffId = args[1];

  if (!/^\d+$/.test(ffId)) {
    return api.sendMessage("UID ph·∫£i l√† s·ªë!", event.threadID);
  }

  if (commandType === "ban") {
    await checkBanStatus(api, event, ffId);
  } else if (commandType === "info") {
    await getAccountInfo(api, event, ffId);
  } else {
    api.sendMessage("L·ªánh kh√¥ng h·ª£p l·ªá! S·ª≠ d·ª•ng: ff [ban/info] [UID]", event.threadID);
  }
};

// **H√†m ki·ªÉm tra t√†i kho·∫£n b·ªã c·∫•m**
async function checkBanStatus(api, event, ffId) {
  const banCheckUrl = `https://freefire-virusteam.vercel.app/isbanned?uid=${ffId}`;

  try {
    const response = await axios.get(banCheckUrl);
    const banData = response.data;

    if (banData && banData["Ki·ªÉm tra t√†i kho·∫£n b·ªã c·∫•m"]) {
      const banInfo = banData["Ki·ªÉm tra t√†i kho·∫£n b·ªã c·∫•m"];
      let resultMessage = "üö´ KI·ªÇM TRA TR·∫†NG TH√ÅI T√ÄI KHO·∫¢N üö´\n\n";
      resultMessage += `üë§ T√™n: ${banInfo["T√™n"]}\n`;
      resultMessage += `üîπ UID: ${banInfo["UID"]}\n`;
      resultMessage += `üåç Khu v·ª±c: ${banInfo["Khu v·ª±c"]}\n`;
      resultMessage += `üî¥ Tr·∫°ng th√°i: ${banInfo["Tr·∫°ng th√°i"]}\n`;

      api.sendMessage(resultMessage, event.threadID);
    } else {
      api.sendMessage("Kh√¥ng th·ªÉ ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n.", event.threadID);
    }
  } catch (error) {
    console.error(error);
    api.sendMessage("L·ªói khi ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n.", event.threadID);
  }
}

// **H√†m l·∫•y th√¥ng tin t√†i kho·∫£n**
async function getAccountInfo(api, event, ffId) {
  const apiUrl = `https://freefire-virusteam.vercel.app/info?uid=${ffId}`;

  try {
    const response = await axios.get(apiUrl);
    const data = response.data;

    if (data) {
      let resultMessage = "üéÆ TH√îNG TIN T√ÄI KHO·∫¢N FREE FIRE üéÆ\n\n";
      resultMessage += `üë§ T√™n: ${data["Account Name"]}\n`;
      resultMessage += `üîπ UID: ${data["Account UID"]}\n`;
      resultMessage += `üî∫ Level: ${data["Account Level"]} (Exp: ${data["Account XP"]})\n`;
      resultMessage += `üåç Khu v·ª±c: ${data["Account Region"]}\n`;
      resultMessage += `üëç L∆∞·ª£t th√≠ch: ${data["Account Likes"]}\n`;
      resultMessage += `üìÖ Ng√†y t·∫°o: ${data["Account Create Time"]}\n`;
      resultMessage += `üïí L·∫ßn ƒëƒÉng nh·∫≠p cu·ªëi: ${data["Account Last Login"]}\n`;
      resultMessage += `üìù Ch·ªØ k√Ω: ${data["Account Signature"]}\n\n`;

      if (data["Equipped Pet Information"]) {
        const petInfo = data["Equipped Pet Information"];
        resultMessage += "üêæ PET HI·ªÜN T·∫†I:\n";
        resultMessage += `üìõ T√™n: ${petInfo["Pet Name"]}\n`;
        resultMessage += `üîπ ID: ${petInfo["Pet ID"]}\n`;
        resultMessage += `üî∫ Level: ${petInfo["Pet Level"]}\n`;
        resultMessage += `üîÑ EXP: ${petInfo["Pet XP"]}\n`;
        resultMessage += `‚úÖ ƒê∆∞·ª£c ch·ªçn: ${petInfo["Selected?"] === "Yes" ? "C√≥" : "Kh√¥ng"}\n\n`;
      }

      if (data["Guild Information"]) {
        const guildInfo = data["Guild Information"];
        resultMessage += "üõ°Ô∏è TH√îNG TIN QU√ÇN ƒêO√ÄN:\n";
        resultMessage += `üèÖ T√™n: ${guildInfo["Guild Name"]}\n`;
        resultMessage += `üîπ ID: ${guildInfo["Guild ID"]}\n`;
        resultMessage += `üî∫ Level: ${guildInfo["Guild Level"]}\n`;
        resultMessage += `üë• Th√†nh vi√™n: ${guildInfo["Guild Current Members"]}/${guildInfo["Guild Capacity"]}\n\n`;

        if (data["Guild Leader Information"]) {
          const leaderInfo = data["Guild Leader Information"];
          resultMessage += "üëë CH·ª¶ QU√ÇN ƒêO√ÄN:\n";
          resultMessage += `üë§ T√™n: ${leaderInfo["Leader Name"]}\n`;
          resultMessage += `üîπ ID: ${leaderInfo["UID"]}\n`;
          resultMessage += `üî∫ Level: ${leaderInfo["Leader Level"]} (Exp: ${leaderInfo["Leader XP"]})\n`;
          resultMessage += `üìÖ Ng√†y t·∫°o: ${leaderInfo["Leader Ac Created Time"]}\n`;
          resultMessage += `üïí L·∫ßn ƒëƒÉng nh·∫≠p cu·ªëi: ${leaderInfo["Leader Last Login Time"]}\n`;
        }
      }

      api.sendMessage(resultMessage, event.threadID);
    } else {
      api.sendMessage("Kh√¥ng t√¨m th·∫•y th√¥ng tin t√†i kho·∫£n.", event.threadID);
    }
  } catch (error) {
    console.error(error);
    api.sendMessage("L·ªói khi l·∫•y th√¥ng tin t√†i kho·∫£n.", event.threadID);
  }
}
